package pm;

import java.net.URI;
import java.util.Collection;
import javax.xml.datatype.XMLGregorianCalendar;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: Schedule_and_Assign_Work <br>
 * @version generated on Fri Dec 27 13:22:21 EET 2019 by morningstar
 */

public interface Schedule_and_Assign_Work extends Activity {

    /* ***************************************************
     * Property http://www.semanticweb.org/morningstar/ontologies/2019/9/untitled-ontology-9#hasRecommendation
     */
     
    /**
     * Gets all property values for the hasRecommendation property.<p>
     * 
     * @returns a collection of values for the hasRecommendation property.
     */
    Collection<? extends PM_Learning_Material> getHasRecommendation();

    /**
     * Checks if the class has a hasRecommendation property value.<p>
     * 
     * @return true if there is a hasRecommendation property value.
     */
    boolean hasHasRecommendation();

    /**
     * Adds a hasRecommendation property value.<p>
     * 
     * @param newHasRecommendation the hasRecommendation property value to be added
     */
    void addHasRecommendation(PM_Learning_Material newHasRecommendation);

    /**
     * Removes a hasRecommendation property value.<p>
     * 
     * @param oldHasRecommendation the hasRecommendation property value to be removed.
     */
    void removeHasRecommendation(PM_Learning_Material oldHasRecommendation);


    /* ***************************************************
     * Property http://www.semanticweb.org/morningstar/ontologies/2019/9/untitled-ontology-9#isPerformOf
     */
     
    /**
     * Gets all property values for the isPerformOf property.<p>
     * 
     * @returns a collection of values for the isPerformOf property.
     */
    Collection<? extends Role> getIsPerformOf();

    /**
     * Checks if the class has a isPerformOf property value.<p>
     * 
     * @return true if there is a isPerformOf property value.
     */
    boolean hasIsPerformOf();

    /**
     * Adds a isPerformOf property value.<p>
     * 
     * @param newIsPerformOf the isPerformOf property value to be added
     */
    void addIsPerformOf(Role newIsPerformOf);

    /**
     * Removes a isPerformOf property value.<p>
     * 
     * @param oldIsPerformOf the isPerformOf property value to be removed.
     */
    void removeIsPerformOf(Role oldIsPerformOf);


    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
